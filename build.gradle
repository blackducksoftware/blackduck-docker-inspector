buildscript {
    repositories { 
        mavenCentral() 
        jcenter()
        }
    dependencies { 
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE") 
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.6'
        }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
tasks.withType(GroovyCompile) { options.encoding = 'UTF-8' }

group = 'com.blackducksoftware.integration'
version = '0.0.1-SNAPSHOT'
description = ''

sourceCompatibility = 1.8
targetCompatibility = 1.8

def linuxFlavors = ["ubuntu:16.04", "centos", "alpine"]
def linuxFlavorsApt = ["ubuntu:16.04", "alpine"]
def linuxFlavorsYum = ["centos"]

springBoot { mainClass = 'com.blackducksoftware.integration.hub.docker.Application' }

task produceFinalZip(type: Zip, dependsOn: build) {
    from("${buildDir}/libs") { include '*.jar' }
    from("${projectDir}/src/main/resources") {
        include 'application.properties'
        into 'config'
    }
}

task createAddZipTasks() {
    linuxFlavors.eachWithIndex {linuxFlavor, index ->
        def linuxFlavorDirName = linuxFlavor.replaceAll("[^a-zA-Z0-9]", "_")
        println "creating task addBashScriptTo${linuxFlavor}ImageBuildDir"
        task "addFinalZipTo${linuxFlavorDirName}ImageBuildDir"(type: Copy, dependsOn: produceFinalZip) {
            def zipFile = file("${buildDir}/distributions/${project.name}-${version}.zip")
            def outputDir = file("${buildDir}/images/${linuxFlavorDirName}/${project.name}")
            from zipTree(zipFile)
            into outputDir
        }
    }
}

task myTest() {
    doLast {
    println "this is a test"
    linuxFlavors.collect {
        def linuxFlavor2 = it
        def linuxFlavorDirName2 = it.replaceAll("[^a-zA-Z0-9]", "_")
         println "${linuxFlavor2} ==> ${linuxFlavorDirName2}" 
         }
    }
}

task createAddBashScriptTasks() {
    linuxFlavors.eachWithIndex {linuxFlavor, index ->
        def linuxFlavorDirName = linuxFlavor.replaceAll("[^a-zA-Z0-9]", "_")
        println "creating task addBashScriptTo${linuxFlavor}ImageBuildDir"
        task "addBashScriptTo${linuxFlavorDirName}ImageBuildDir"(type: Copy, dependsOn: build) {
            from 'src/main/resources/scan-docker-image-tar.sh'
            into "${buildDir}/images/${linuxFlavorDirName}/${project.name}"
        }
    }
}

task createYumDockerfileTasks() {
    linuxFlavorsYum.eachWithIndex {linuxFlavor, index ->
        def linuxFlavorDirName = linuxFlavor.replaceAll("[^a-zA-Z0-9]", "_")
        println "creating task create${linuxFlavor}Dockerfile"
        task "create${linuxFlavorDirName}Dockerfile"(type: Dockerfile) {
            destFile = project.file("${buildDir}/images/${linuxFlavorDirName}/${project.name}/Dockerfile")
            println "destFile: ${destFile}"
            from linuxFlavor
            maintainer 'Black Duck Software'
            
            runCommand 'yum update'
            runCommand 'yum install -y wget'
            runCommand 'wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.rpm"'
            runCommand 'rpm -ivh jdk-8u45-linux-x64.rpm'
            
            runCommand 'mkdir /opt/blackduck'
            runCommand 'mkdir /opt/blackduck/hub-docker'
            runCommand 'mkdir /opt/blackduck/hub-docker/config'
            addFile('config', '/opt/blackduck/hub-docker/config')
            addFile("${project.name}-${version}.jar", "/opt/blackduck/${project.name}")
            addFile("scan-docker-image-tar.sh", "/opt/blackduck/${project.name}")
            runCommand 'mkdir /tmp/blackduck'
            runCommand 'mkdir /tmp/blackduck/hub-docker'
            runCommand 'mkdir /tmp/blackduck/hub-docker/working'
        }
    }
}

task createAptDockerfileTasks() {
    linuxFlavorsApt.eachWithIndex {linuxFlavor, index ->
        def linuxFlavorDirName = linuxFlavor.replaceAll("[^a-zA-Z0-9]", "_")
        println "creating task create${linuxFlavor}Dockerfile"
        task "create${linuxFlavorDirName}Dockerfile"(type: Dockerfile) {
            destFile = project.file("${buildDir}/images/${linuxFlavorDirName}/${project.name}/Dockerfile")
            println "destFile: ${destFile}"
            from linuxFlavor
            maintainer 'Black Duck Software'
            runCommand 'apt-get update -y'
            runCommand 'apt install -y openjdk-8-jdk'
            //runCommand 'apt-get install -y vim'
            runCommand 'mkdir /opt/blackduck'
            runCommand 'mkdir /opt/blackduck/hub-docker'
            runCommand 'mkdir /opt/blackduck/hub-docker/config'
            addFile('config', '/opt/blackduck/hub-docker/config')
            addFile("${project.name}-${version}.jar", "/opt/blackduck/${project.name}")
            addFile("scan-docker-image-tar.sh", "/opt/blackduck/${project.name}")
            runCommand 'mkdir /tmp/blackduck'
            runCommand 'mkdir /tmp/blackduck/hub-docker'
            runCommand 'mkdir /tmp/blackduck/hub-docker/working'
        }
    }
}

task createDockerfiles(dependsOn: [createubuntu_16_04Dockerfile, createalpineDockerfile, createcentosDockerfile]) {
    doLast {
        println "Created docker files"
    }
}

task buildImageDirs(dependsOn: [addFinalZipToubuntu_16_04ImageBuildDir, addFinalZipTocentosImageBuildDir, addFinalZipToalpineImageBuildDir, 
    addBashScriptToubuntu_16_04ImageBuildDir, addBashScriptTocentosImageBuildDir, addBashScriptToalpineImageBuildDir, createDockerfiles]) {
}
    
task buildDockerImageUbuntu (type: Exec, dependsOn: [buildImageDirs]) {
    commandLine "docker", "build", "--tag", "blackduck/${project.name}/ubuntu_16_04:1.0", "${buildDir}/images/ubuntu_16_04/${project.name}"
}

task buildDockerImageAlpine (type: Exec, dependsOn: [buildImageDirs]) {
    commandLine "docker", "build", "--tag", "blackduck/${project.name}/alpine:1.0", "${buildDir}/images/alpine/${project.name}"
}

task buildDockerImageCentOS (type: Exec, dependsOn: [buildImageDirs]) {
    commandLine "docker", "build", "--tag", "blackduck/${project.name}/centos:1.0", "${buildDir}/images/centos/${project.name}"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'com.blackducksoftware.integration:hub-common:10.0.0'
    
    compile 'com.github.docker-java:docker-java:3.0.8'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'commons-io:commons-io:2.5'

    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.codehaus.groovy:groovy-all:2.4.8'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}