#
# Configuration settings for hub-docker-inspector.
#
# Required: hub.url, hub.username, hub.password
# Required if Docker registry login is required to pull the images you want to inspect:
#	docker.registry.username, docker.registry.password, and maybe docker.registry
#

# Black Duck Hub connection details
hub.url=
hub.timeout=120
hub.username=
hub.password=

# The properties in this section must be set if you must connect to the Hub through a proxy
hub.proxy.host=
hub.proxy.port=
hub.proxy.username=
hub.proxy.password=

# If using an https Hub server, you can choose to automatically import the certificates if they are not already in the current Java Keystore
hub.auto.import.cert=

# The default project name will be the Docker image name
hub.project.name=
# The default version name will be Docker image tag
hub.project.version=

# If Hub Docker Inspector cannot derive it automatically,
# use linux.distro to specify the target image linux distribution
# (ubuntu, debian, busybox, centos, fedora, redhat, alpine)
linux.distro=

# Timeout for external command execution (to pull a docker image, etc.)
command.timeout=120000

# Logging level: ERROR, WARN, INFO, DEBUG, TRACE
logging.level.com.blackducksoftware=INFO

# If dev.mode=true, the jar file will be copied to the extractor container
dev.mode=false

# If dry.run=true, Hub Docker Inspector won't upload results to Hub
dry.run=false

# Path on host of a directory into which the resulting output files will be copied
output.path=

# Set to true to include the image tarfile in the output
output.include.dockertarfile=false

# Set to true to include the container file system tarfile in the output
output.include.containerfilesystem=false

# If you want to add a prefix to the code location name, specify it here
hub.codelocation.prefix=

# Provide the path of a directory in which hub-docker-inspector will create temp files
working.dir.path=

# Path to the hub-docker-inspector .jar file
jar.path=

### The following properties should not normally be set/changed by the user
docker.image=
docker.tar=
docker.image.repo=
docker.image.tag=
host.working.dir.path=
on.host=true