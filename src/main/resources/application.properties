#
# Configuration settings for hub-docker-inspector.
#
# Required: hub.url, hub.username, hub.password
# Required if Docker registry login is required to pull the images you want to inspect:
#	docker.registry.username, docker.registry.password, and maybe docker.registry
#

# Required: Black Duck Hub connection details
hub.url=
hub.timeout=120
hub.username=
hub.password=

# Optional: The properties in this section must be set if you must connect to the Hub through a proxy
hub.proxy.host=
hub.proxy.port=
hub.proxy.username=
hub.proxy.password=

# Possibly required: Docker registry connection details
# docker.host defaults to unix:///var/run/docker.sock
docker.host=
docker.tls.verify=
docker.cert.path=
# docker.registry example : localhost:5000
docker.registry=
docker.registry.username=
docker.registry.password=

# Optional: If using an https Hub server, you can provide the Java keystore password to import the certificate
key.store.pass=

# Optional : The default project name will be ${docker.image.name}_docker
hub.project.name=
# Optional : The default version name will be ${docker.tag.name}
hub.project.version=

# If you are using the provided shell scripts, there is usually no need to change any of the remaining properties

# If you need to specify your linux.distro, you can change it here, or run with --linux.distro=YourSpecificDistro
linux.distro=

working.directory=./working

# default is two minutes, or 120,000 milliseconds
command.timeout=120000

# Input: Specify either docker.tar or docker.image
# If you specify docker.image, you can include or omit the :tag suffix
docker.tar=
docker.image=

install.dir=/opt/blackduck/hub-docker-inspector

logging.level.com.blackducksoftware=INFO

# If dev.mode=true, the jar file will be copied to the extractor container
dev.mode=false